{"version":3,"sources":["components/Navbar/index.js","components/LoginForm/index.js","pages/Error404/index.js","components/Container/index.js","components/Card/index.js","components/RegisterForm/index.js","utils/API.js","pages/Register/index.js","components/Hero/index.js","components/HomeCard/index.js","components/Footer/index.js","pages/Home/index.js","components/AppProgressBar/index.js","components/UserGoalCard/index.js","pages/Manage/index.js","components/SelectedCategory/index.js","components/Instructions/index.js","components/GoalCard/index.js","components/TaskItem/index.js","components/TaskList/index.js","components/TaskOverlay/index.js","components/OkLinkDialog/index.js","pages/AddGoal/index.js","components/Visualizer/index.js","pages/Progress/index.js","components/CategoryForm/index.js","components/GoalForm/index.js","components/TaskForm/index.js","pages/Admin/index.js","App.js","index.js"],"names":["Navbar","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","React","createElement","className","role","Link","to","src","alt","props","isAuthenticated","Fragment","href","target","rel","firstName","type","id","redirect-location","onClick","handleLogin","Component","LoginForm","showLogin","message","htmlFor","placeholder","email","name","onChange","handleOnChange","password","handleLoginFormSubmit","handleLoginClose","failedLoginAttempts","Error404","Container","children","Card","heading","RegisterForm","lastName","handleRegisterFormSubmit","API","registerUser","userData","axios","post","authenticateUser","loginData","getUserDetails","userId","get","addCategory","categoryData","getCategories","getCategoryMatch","categoryId","addGoal","goalData","getGoalsInCategory","getGoalMatch","goalId","addTask","taskData","getTasksInGoal","addUserGoal","userGoalData","addTimeline","timelineData","deleteTimeline","timelineId","delete","emailAddr","getTaskTimeline","taskId","userGoalId","updateGoalPercent","goalPercent","put","Register","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","componentDidMount","loginClose","event","preventDefault","console","log","then","jsonData","userKey","data","_id","setUserSession","userEmail","user_email","res","history","goBack","catch","error","Hero","style","backgroundImage","HomeCard","_Component","Row","categories","map","category","Col","width","Img","variant","categoryImgSrc","Body","Title","categoryName","Text","categoryTagline","Button","Footer","Home","Homecard","AppProgressBar","_ref","ProgressBar","now","UserGoalCard","goalName","Manage","size","userGoals","filter","userGoal","taskName","SelectedCategory","hidden","selected","selectedCategory","categoryTagLine","clearCategory","Instructions","instructionsHeading","instructionsText","GoalCard","selectGoal","goalTagline","TaskItem","streakTarget","totalTarget","TaskList","tasks","task","TaskOverlay","showTaskOverlay","selectedGoal","handleAddGoalFormSubmit","taskOverlayClose","OkLinkDialog","showOkDialog","okDialogText","okDialogLink","AddGoal","queryString","location","search","qsArray","split","_this2","goals","goal","Visualizer","Table","responsive","VizHeader","visualizerDates","changeVisualizerDates","visualizerData","VizGoal","handleCompleteTask","handleIncompleteTask","_React$Component2","_this3","aria-hidden","date","_React$Component3","_this4","colSpan","userTasks","VizTask","currentStreak","taskCurrentStreak","_React$Component4","_this5","taskCompleteYN","class","userTimeline","VizDate","timelineDate","dateData","taskLongStreak","taskStreakTarget","taskTotalCompleted","taskTotalTarget","_React$Component5","_this6","taskCompletedYN","Progress","CategoryForm","handleCategoryFormSubmit","GoalForm","handleGoalFormSubmit","Task","colspan","handleTaskFormSubmit","Admin","TaskForm","weeklyTarget","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","moment","require","App","userDetails","loginMessage","numVisualizerDays","resetState","localStorage","getItem","setState","startOf","format","startDate","subtract","resetVisualizerDates","numDays","dateArray","thisDate","add","toString","numdays","_defineProperty","taskDate","failedCount","setupUserGoals","parseInt","dbUserGoals","g","dbUserTasks","t","dbUserTimeline","taskTimelines","l","currentDate","taskCompleted","ul","utc","timelineEntry","thisTask","thisGoal","calculateProgress","_asyncToGenerator","_callee","_loop","_context3","numTasks","numCompletedTasks","_loop2","_context2","_context","dbTaskTimeline","longestStreak","totalCompleted","dbrecord","taskStartDate","diff","dateIndex","dateIndexMax","d","Math","floor","dbUserGoal","dbError","_x","logoutClick","setItem","loginClick","markUserGoalComplete","Router","handleLogout","Switch","Route","exact","path","render","assign","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6017796b.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './style.css';\n\nclass Navbar extends React.Component {\n    render() {\n        return (\n            <nav className='navbar navbar-expand' role='navigation'>\n                <Link to='/'><div className='navbar-brand'>\n                    <img className='navlogo' src='images/KeepItTogetherLogo.png' alt='logo' />\n                </div></Link>\n                <div className='navbar-nav mr-auto'>\n                    {/* <Link className='nav-item nav-link' to='/test'>Test</Link> */}\n                    { this.props.isAuthenticated ? (\n                        <React.Fragment>\n                            <Link className='nav-item nav-link' to='/addgoal'>Add Goal</Link>\n                            <Link className='nav-item nav-link' to='/manage'>Manage Goals</Link>\n                            <Link className='nav-item nav-link' to='/progress'>Progress</Link>\n                            <a className='nav-item nav-link' href='https://medium.com/better-humans' target=\"_blank\" rel=\"noopener noreferrer\">Blog</a>\n                            <span className=\"loggedInAs\">Let's do this {this.props.firstName}!</span>\n                            <button \n                                type='button' \n                                className='btn navbutton btn-logout'\n                                id='btn-logout'\n                                redirect-location='/'\n                            >Log Out\n                            </button>\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                            {/* <Link className='nav-item nav-link' to='/register'>Register</Link> */}\n                            <button \n                                type='button' \n                                className='btn navbutton'\n                                onClick={this.props.handleLogin}\n                            >Log In\n                            </button>\n                        </React.Fragment>\n                        )\n                    }\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport {Link} from 'react-router-dom';  \nimport './style.css';\n\nclass LoginForm extends React.Component {\n    render() {\n        if (this.props.showLogin) {\n            return (\n                <div className='login-popup'>\n                    <h5>{this.props.message}</h5>\n                <p>Don't have an account?  <Link className='inline-link' to='/register'>Register</Link> now.</p>\n                <form>\n                    <div className='form-group'>\n                        <label htmlFor='email'>Email Address</label>\n                        <input \n                            type='text' \n                            className='form-control' \n                            placeholder='Email Address'\n                            value={this.props.email}\n                            name='email'\n                            id='email' \n                            onChange={this.props.handleOnChange}\n                        />\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='password'>Password</label>\n                        <input \n                            type='password' \n                            className='form-control' \n                            value={this.props.password}\n                            name='password'\n                            id='password' \n                            onChange={this.props.handleOnChange}\n                        />\n                    </div>\n                    <button \n                        type='submit' \n                        className='btn navbutton'\n                        onClick={this.props.handleLoginFormSubmit}\n                    >Log In\n                    </button>\n                    &nbsp;\n                    <button \n                        type='submit' \n                        className='btn navbutton'\n                        onClick={this.props.handleLoginClose}\n                    >Close\n                    </button>\n                    <p className='login-message'>{this.props.failedLoginAttempts > 0 ? 'Incorrect email or password.' : ''}</p>\n                </form>\n                </div>\n        );\n        } else {\n            return (\n                <span> </span>\n            );\n        }\n    }\n}\n\nexport default LoginForm;","import React from 'react';\nimport './style.css';\n\nclass Error404 extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1 className='error-404Header'>\n                404 Error\n            </h1>\n            <h2 className=\"error-404Body\">If at first you don't succeed,<br/>dust yourself off and try again!<br/><br/>\n            (You can dust it off and try again, try again)</h2>\n            </div>\n        );\n    }\n}\n\nexport default Error404;","import React from 'react';\nimport './style.css';\n\nclass Container extends React.Component {\n    render() {\n        return( \n            <div className='container'>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Container;","import React from 'react';\nimport './style.css';\n\nclass Card extends React.Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <h5>{this.props.heading}</h5>\n                </div>\n                <div className=\"card-body\">{this.props.children}</div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n\n","import React from 'react';\nimport './style.css';\n\nclass RegisterForm extends React.Component {\n    render() {\n        return (\n            <form>\n                <div className='form-group'>\n                    <label htmlFor='firstName'>First Name</label>\n                    <input \n                        type='text' \n                        className='form-control' \n                        placeholder='First Name'\n                        value={this.props.firstName}\n                        name='firstName'\n                        id='firstName' \n                        onChange={this.props.handleOnChange}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='lastName'>Last Name</label>\n                    <input \n                        type='text' \n                        className='form-control' \n                        placeholder='Last Name'\n                        value={this.props.lastName}\n                        name='lastName'\n                        id='lastName' \n                        onChange={this.props.handleOnChange}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='email'>Email Address</label>\n                    <input \n                        type='text' \n                        className='form-control' \n                        placeholder='Email Address'\n                        value={this.props.email}\n                        name='email'\n                        id='email' \n                        onChange={this.props.handleOnChange}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='password'>Password</label>\n                    <input \n                        type='password' \n                        className='form-control' \n                        value={this.props.password}\n                        name='password'\n                        id='password' \n                        onChange={this.props.handleOnChange}\n                    />\n                </div>\n                <button \n                    type='submit' \n                    className='btn btn-style'\n                    onClick={this.props.handleRegisterFormSubmit}\n                >Register!\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default RegisterForm;","import axios from \"axios\";\nexport default {\n\n    // API Server requests\n    registerUser: function(userData) {\n        return axios.post('/api/user', userData);\n    },\n\n    authenticateUser: function(loginData) {\n        return axios.post('/api/user/login', loginData);\n    },\n\n    getUserDetails: function(userId) {\n        // console.log('API request - getUserDetails');\n        return axios.get('/api/user/' + userId);\n    },\n\n    addCategory: function(categoryData) {\n        // console.log('API request - addCategory');\n        return axios.post('/api/category', categoryData);\n    },\n\n    getCategories: function() {\n        // console.log('API request - getCategories');\n        return axios.get('/api/category');\n    },\n    getCategoryMatch: function(categoryId) {\n        // console.log('API request - getCategoryMatch');\n        return axios.get('/api/category/' + categoryId);\n    },\n\n    addGoal: function(goalData) {\n        // console.log('API request - addGoal');\n        return axios.post('/api/goal', goalData);\n    },\n    getGoalsInCategory: function(categoryId) {\n        // console.log('API request - getGoalsInCategory');\n        return axios.get('/api/goal/cat/' + categoryId);\n    },\n    getGoalMatch: function(goalId) {\n        // console.log('API request - getGoalMatch');\n        return axios.get('/api/goal/' + goalId);\n    },\n\n    addTask: function(taskData) {\n        // console.log('API request - addTask');\n        return axios.post('/api/task', taskData);\n    },\n    getTasksInGoal: function(goalId) {\n        // console.log('API request - getTasksInGoal');\n        return axios.get('/api/task/' + goalId);\n    },\n\n    addUserGoal: function(userGoalData) {\n        // console.log('API request - addUserGoal');\n        return axios.post('/api/usergoal', userGoalData);\n    },\n    addTimeline: function(timelineData) {\n        // console.log('API request - add timeline entry');\n        return axios.post('/api/tasktimeline', timelineData);\n    },\n    deleteTimeline: function(timelineId) {\n        // console.log('API request - delete timeline entry');\n        return axios.delete('/api/tasktimeline/' + timelineId);\n    },\n    email: function(emailAddr) {\n        // console.log('API request - send an email');\n        return axios.post('/api/email/', emailAddr);\n    },\n    getTaskTimeline: function(taskId, userGoalId) {\n        // console.log('API request - get task timeline entries for a task/usergoal');\n        return axios.get('/api/tasktimeline/task/' + taskId + '/' + userGoalId);\n    },\n    updateGoalPercent: function(userGoalId, goalPercent) {\n        // console.log('API request - update goalPercenta for userGoalId ' + userGoalId);\n        return axios.put('/api/usergoal//goalpercent/' + userGoalId + '/' + goalPercent);\n    }\n\n}\n\n","import React from \"react\";\nimport \"./style.css\";\n\nimport Container from \"../../components/Container\";\nimport Card from \"../../components/Card\";\nimport RegisterForm from \"../../components/RegisterForm\";\nimport API from \"../../utils/API\";\n\nclass Register extends React.Component {\n\n  componentDidMount = () => {\n    this.props.loginClose();\n  }\n  handleRegisterFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"submit clicked\");\n    let userData = {\n      firstName: this.props.firstName,\n      lastName: this.props.lastName,\n      email: this.props.email,\n      password: this.props.password\n    };\n    // console.log(userData);\n    API.registerUser(userData)\n      .then(jsonData => {\n        console.log(jsonData);\n        let userKey = jsonData.data._id;\n        console.log(userKey);\n        this.props.setUserSession(userKey);\n        // send the welcome email\n        let userEmail={'user_email':this.props.email}\n        API.email(userEmail)\n          .then( res => {\n            // go back to prior (referring) page\n            this.props.history.goBack();\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Card heading=\"Register\">\n            <RegisterForm\n              firstName={this.props.firstName}\n              lastName={this.props.lastName}\n              email={this.props.email}\n              password={this.props.password}\n              handleOnChange={this.props.handleOnChange}\n              handleRegisterFormSubmit={this.handleRegisterFormSubmit}\n            />\n          </Card>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      {props.children}\n      <p className=\"heroCopy\">keep it together</p>\n    </div>\n  );\n}\n\nexport default Hero;\n","\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';  \n\nimport './style.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass HomeCard extends Component {\n \nrender(){\n  \n  return (\n      <Row className=\"homeCardRow\">\n          {this.props.categories.map(category => (\n            <Col key={category._id}>\n              <Card className=\"homeCard\" style={{ width: '18rem' }}>\n                <Card.Img className=\"homeCardImg\" variant=\"top\" src={category.categoryImgSrc} />\n                <Card.Body className=\"homeCardBody\">\n                  <Card.Title className=\"cardTitle\">{category.categoryName}</Card.Title>\n                  <Card.Text className=\"homeCardCopy\">\n                    {category.categoryTagline}\n                  </Card.Text>\n                  <Link className='inline-link' to={'/addgoal?categoryId=' + category._id}>\n                    <Button className=\"homeCardButton\">add goal</Button>\n                  </Link>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n      </Row>  \n    )\n  }\n}\n\n\n\nexport default HomeCard;","\n\n    import React from \"react\";\n import \"./style.css\"\n    \nfunction Footer(){\n      return (\n      <footer className=\"footerHome\">\n          <p className=\"footerCopy\">Follow Us</p>\n          <i className=\"fab fa-facebook fa-3x\"></i>\n          <i className=\"fab fa-twitter fa-3x\"></i>\n          <i className=\"fab fa-github fa-3x\"></i>\n          <i className=\"fab fa-pinterest fa-3x\"></i>\n          <i className=\"fab fa-instagram fa-3x\"></i>\n          <p>©2019 Keep It Together, Inc.</p>\n      </footer>\n      );\n    }\n    \n    export default Footer;\n      \n    \n\n\n","import React from \"react\";\nimport Hero from \"../../components/Hero\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport Homecard from \"../../components/HomeCard\";\n// import HomeInfoCard from \"../../components/HomeInfoCard\";\nimport Footer from \"../../components/Footer\";\nimport \"./style.css\";\n// import Card from \"../../components/Card\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <Hero backgroundImage=\"images/heroImage.png\" />\n        <div className=\"heroImgDiv\">\n        <img src=\"images/rockToss.gif\" className=\"heroImg\" alt=\"\"/>\n        </div>\n        <h1 className=\"aboutUsHeader\">Adulting is hard.</h1>\n        <p className=\"aboutUsCopy\">There's no real guidebook on how to do it right and worst of all, thanks to social media, we all believe that everyone seems to have it all together except for ourselves.</p>\n        <Row className=\"rowInfoCards\">\n        \n        <Col className=\"infoCardCol\">\n        <img src=\"images/bossYell.jpg\" alt=\"\" className=\"infoCardImg\"></img>\n        <h1 className=\"infoCardHeading\">our mission</h1>\n        <p>Keep It Together was designed to help you build good habits without stressing you out.</p>\n          </Col>\n\n          <Col className=\"infoCardCol\">\n        <img src=\"images/sadBirthday.jpg\" alt=\"\"  className=\"infoCardImg\"></img>\n        <h1 className=\"infoCardHeading\">simple <br/>& fast</h1>\n        <p>Easily keep track of your goals, add new ones and level up with each goal completion.</p>\n          </Col>\n\n          <Col className=\"infoCardCol\">\n        <img src=\"images/dudeWithShitTogether.jpg\" alt=\"\"  className=\"infoCardImg\"></img>\n        <h1 className=\"infoCardHeading\">the bigger picture</h1>\n        <p>Our visualizer helps you spot trends ranging days and weeks so you will be well on your way to being an adult in no time.</p>\n          </Col>\n</Row>\n\n\n        <Row className=\"getStartedRow\">\n        <Col>\n          <h1 className=\"getStartedHeader\">Let's get started</h1>\n          <p className=\"getStartedBody\">Pick your difficulty level<br/> and we'll walk you through the rest.</p>\n          </Col>\n        </Row>\n        <Row className=\"rowAbout\">\n          <Homecard categories={this.props.categories} />\n        </Row>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n\n//  NAv\n\n//hero\n\n// cards clicky\n\n// footer\n","import React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nconst AppProgressBar = ({goalPercent}) => {\n    return <ProgressBar variant=\"success\" now={goalPercent} />;\n}\n\nexport default AppProgressBar;","import React from \"react\";\nimport AppProgressBar from '../AppProgressBar';\n import Button from 'react-bootstrap/Button';\nimport { Link } from \"react-router-dom\";\nimport './style.css';\n\n\nconst UserGoalCard = ({ goalName, goalPercent }) => {\n  return (\n    <div className=\"user-goal-card\">\n      <div className=\"user-goal-card-header\">\n        <h5 className=\"userGoalCardHeader\">{goalName}</h5>\n      </div>\n      <div className=\"user-goal-card-body\">\n        {/* <br /> */}\n        <AppProgressBar goalPercent={goalPercent} />\n        <br />\n         <Link to=\"/progress\"><Button variant= \"primary\">See Tasks</Button></Link>\n      </div>\n    </div>\n  );\n};\n\nexport default UserGoalCard;\n","// react\nimport React from \"react\";\nimport \"./style.css\";\n\n// react bootstrap\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n// components\n// import Container from \"../../components/Container\";\n// import { Col, Row } from \"../../components/Grid\";\nimport UserGoalCard from \"../../components/UserGoalCard\";\n// import GoalCard from '../../components/GoalCard';\n\nclass Manage extends React.Component {\n\n    componentDidMount = () => { }\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"userGoalRow\">\n                    <Col size=\"md-12 col-auto\" className=\"userGoalCol\">\n                        <h2 className=\"manageH2\">Active Goals</h2>\n                        <div className=\"userGoalDiv\">\n                            {this.props.userGoals ? (\n                                this.props.userGoals.filter(userGoal => userGoal.goalPercent !== 100).map(userGoal => (\n                                    <UserGoalCard\n                                        id={userGoal.userGoalId}\n                                        key={userGoal.userGoalId}\n                                        goalName={userGoal.goalName}\n                                        taskName={userGoal.taskName}\n                                        goalPercent={userGoal.goalPercent}\n                                    />\n                                ))\n                            ) : (\n                                <span>No goals in this section.</span>\n                            )}\n                        </div>\n                    </Col>\n                </Row>\n                <Row className=\"userGoalRow\" size=\"md-12\">\n                    <Col size=\"md-12 col-auto\" className=\"userGoalCol\">\n                        <h2 className=\"manageH2\">Achieved Goals</h2>\n                        <div className=\"userGoalDiv\">\n                            {this.props.userGoals ? (\n                                this.props.userGoals.filter(userGoal => userGoal.goalPercent === 100).map(userGoal =>\n                                (\n                                    <UserGoalCard\n                                        id={userGoal.userGoalId}\n                                        key={userGoal.userGoalId}\n                                        goalName={userGoal.goalName}\n                                        goalPercent={userGoal.goalPercent}\n                                    />\n                                )\n\n                                )\n                            ) : (\n                                <span>No goals in this section.</span>\n                            )}\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Manage;\n","import React from 'react';\nimport './style.css';\n\nclass SelectedCategory extends React.Component {\n\n    componentDidMount = () => {\n        if (this.props.categoryId === '') {\n            this.props.getCategories();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n            {this.props.categoryId === '' ? (\n                <form>\n                    <div className='form-group'>\n                        <label htmlFor='categoryId' className=\"selectCategory\">Select Category</label>\n                        <select className='form-control' id='categoryId' name='categoryId' onChange={this.props.handleOnChange} value={this.props.categoryId}>\n                            <option hidden selected>-- Select a Category --</option>\n                        {this.props.categories.map( category => (\n                            <option key={category._id} value={category._id}>{category.categoryName}</option>\n                        ))}\n                        </select>\n                    </div>\n                </form>\n            ) : (\n                <div className=\"categoryNameTag\">\n                    <span className=\"categoryName\">{this.props.selectedCategory.categoryName} </span>|\n                    <span className=\"categoryTag\">{this.props.selectedCategory.categoryTagLine}</span>\n                    {/* <p>And load the image at: {this.props.selectedCategory.categoryImgSrc}</p> */}\n                    <p className=\"changeCategoryButton\"><button \n                            type='submit' \n                            className='btn navbutton'\n                            onClick={this.props.clearCategory}\n                        >Change Category\n                    </button>\n                    </p>\n                </div>\n            )}\n            </div>\n\n        );\n    }\n}\n\nexport default SelectedCategory;","import React from 'react';\nimport './style.css';\n\nclass Instructions extends React.Component {\n    render() {\n        return (\n            <div className='jumbotron instructions'>\n                {this.props.instructionsHeading === '' ? '' : (\n                    <h4 className=\"instructionsHeading\">{this.props.instructionsHeading}</h4>\n                )}\n                <p className=\"instructionsBody\">{this.props.instructionsText}</p>\n            </div>\n        )\n    }\n}\n\nexport default Instructions;","import React from \"react\";\nimport \"./style.css\";\n\nconst GoalCard = ({ selectGoal, goalName, goalTagline, id }) => {\n  return (\n    <div className=\"goal-card\" onClick={() => selectGoal(id)}>\n      <div className=\"goal-card-header\">\n        <h5 className=\"goalCardHeader\">{goalName}</h5>\n      </div>\n      <div className=\"goal-card-body\">\n        {goalTagline}\n      </div>\n    </div>\n  );\n};\n\nexport default GoalCard;\n","import React from 'react';\nimport './style.css';\n\nconst TaskItem = ({taskName, streakTarget, totalTarget, id}) =>{\n    return(\n        <tr id={id} key={id} className=\"taskItemRow\">\n            <td className='taskName'>\n                {taskName}\n            </td>\n            <td className='streakTarget'>\n                {streakTarget}\n            </td>\n            <td className='totalTarget'>\n                {totalTarget}\n            </td>\n        </tr>\n    )\n}\n\nexport default TaskItem;","import React from 'react';\nimport './style.css';\nimport TaskItem from '../../components/TaskItem';\n\nclass TaskList extends React.Component {\n    render() {\n        return (\n            <div> \n                <table>\n                    <thead className='taskListHead'>\n                        <tr>\n                            <td>\n                                <br/>Task Name\n                            </td>\n                            <td>\n                                Streak<br/>Target\n                            </td>\n                            <td>\n                                Total<br/>Target\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.tasks.map( task => (\n                        <TaskItem \n                            taskName={task.taskName}\n                            streakTarget={task.streakTarget}\n                            totalTarget={task.totalTarget}\n                            id={task._id}\n                            key={task._id}\n                        />\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default TaskList;","import React from 'react';\nimport './style.css';\n\nimport TaskList from '../../components/TaskList';\n\nclass TaskOverlay extends React.Component {\n    render() {\n        if (this.props.showTaskOverlay) {\n            return (\n                <div className='task-overlay'>\n                    <h4>Goal: {this.props.selectedGoal.goalName}</h4>\n                    <TaskList\n                        key='TaskList'\n                        tasks={this.props.tasks}\n                    />\n                    <hr/>\n                    <button \n                        type='submit' \n                        className='btn btn-style'\n                        onClick={this.props.handleAddGoalFormSubmit}\n                    >Let's Go!\n                    </button>\n                    &nbsp;\n                    <button \n                        type='submit' \n                        className='btn btn-style'\n                        onClick={() => this.props.taskOverlayClose()}\n                    >Close\n                    </button>\n                </div>\n            );\n        } else {\n            return (\n                <span> </span> \n            );\n        } \n    }\n}\n\nexport default TaskOverlay;","import React from 'react';\n\nimport './style.css';\n\nclass OkLinkDialog extends React.Component {\n    render() {\n        if (this.props.showOkDialog) {\n            return (\n                <div className='okdialog-popup'>\n                    <p>{this.props.okDialogText}</p>\n                        <button \n                            type='submit' \n                            className='btn navbutton btn-okdialog'\n                            id='btn-okdialog'\n                            redirect-location={this.props.okDialogLink}\n                        >OK\n                        </button>\n                </div>\n            )\n        } else {\n            return(\n                <span></span>\n            )\n        }\n    }\n}\n\nexport default OkLinkDialog","import React from 'react';\n\nimport Container from '../../components/Container';\nimport SelectedCategory from '../../components/SelectedCategory';\nimport Instructions from '../../components/Instructions';\nimport GoalCard from '../../components/GoalCard';\nimport TaskOverlay from '../../components/TaskOverlay';\nimport OkLinkDialog from '../../components/OkLinkDialog';\n\nimport './style.css';\n\n\n\nclass AddGoal extends React.Component {\n\n    componentDidMount = () => {\n        let queryString = this.props.location.search;\n        if (queryString) {\n            let qsArray = queryString.split('=');\n            console.log(qsArray);\n            this.props.getCategoryMatch(qsArray[1]);\n            this.props.getGoalsInCategory(qsArray[1]);\n        }\n    }\n\n    render() {\n        return (\n            <div className='add-goal'>\n                <Container>\n                    {/* <h1 className=\"addGoalHeader\">Add Goal</h1> */}\n                    <SelectedCategory\n                        handleOnChange={this.props.handleOnChange}\n                        categoryId={this.props.categoryId}\n                        getCategories={this.props.getCategories}\n                        categories={this.props.categories}\n                        selectedCategory={this.props.selectedCategory}\n                        clearCategory={this.props.clearCategory}\n                    />\n                    <Instructions \n                        instructionsHeading='Instructions'\n                        instructionsText='Select a goal.  Our personal coaching monkeys will select a list of activities for you to achieve your goal.  To complete a goal, you will need to successfully complete each of the tasks associated with the goal.  You complete each activity by either getting streak of consecutive days OR doing that activity a total number of times.'\n                    />\n                    <div className='goalCardContainer'>\n                        {this.props.goals.length > 0 ?\n                        this.props.goals.map( goal => (\n                            <GoalCard\n                                id={goal._id}\n                                key={goal._id}\n                                goalName={goal.goalName}\n                                goalTagline={goal.goalTagline}\n                                selectGoal={this.props.selectGoal}\n                            />\n                        )) : <span>No goals in this category.</span>}\n                    </div>\n                    <div>\n                        <TaskOverlay \n                            showTaskOverlay={this.props.showTaskOverlay}\n                            selectedGoal={this.props.selectedGoal}\n                            tasks={this.props.tasks}\n                            handleAddGoalFormSubmit={this.props.handleAddGoalFormSubmit}\n                            taskOverlayClose={this.props.taskOverlayClose}\n                        />\n                    </div>\n                    <div>\n                        <OkLinkDialog\n                            showOkDialog={this.props.showOkDialog}\n                            okDialogText='Congratulations!  You took another step towards being less of a garbage person!  But seriously, you got this!'\n                            okDialogLink='/manage'\n                        />\n                    </div>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AddGoal;","import React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport './style.css'\n\nclass Visualizer extends React.Component {\n\n    componentDidMount = () => {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Table responsive=\"lg\">\n                    <VizHeader\n                        key={'viz-header'}\n                        visualizerDates={this.props.visualizerDates}\n                        changeVisualizerDates={this.props.changeVisualizerDates}\n                    />\n                    {this.props.visualizerData.map( userGoal => (\n                        <VizGoal\n                            key={userGoal.userGoalId}\n                            goalData={userGoal}\n                            handleCompleteTask={this.props.handleCompleteTask}\n                            handleIncompleteTask={this.props.handleIncompleteTask}\n                        />\n                    ))}\n                </Table>\n\n            </div>\n        );\n    }\n}\n\nclass VizHeader extends React.Component {\n    render() {\n        return(\n            <thead>\n                <tr>\n                    <td>&nbsp;</td>\n                    <td onClick={ () => this.props.changeVisualizerDates(-1) }>\n                        <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n                    </td>\n                    {this.props.visualizerDates.map( date => (\n                            <td className='date-heading' key={date}>{date}</td>\n                        )\n                    )}\n                    <td onClick={ ()=> this.props.changeVisualizerDates(1) }>\n                        <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n                    </td>\n                    <td>CURR</td>\n                    <td>LONG</td>\n                    <td>TOTAL</td>\n                </tr>\n            </thead>\n        )\n    }\n}\n\nclass VizGoal extends React.Component {\n    render() {\n        return(\n            <tbody>\n                <tr className='goal-row'>\n                    <td colSpan='13'>\n                        {this.props.goalData.goalName} | {this.props.goalData.goalPercent}% Complete\n                    </td>\n                </tr>\n                {this.props.goalData.userTasks.map( task => (\n                    <VizTask\n                        currentStreak={task.taskCurrentStreak}\n                        // longStreak={task.taskLongStreak}\n                        // totalCompleted={task.taskTotalCompleted}\n                        key={task._id}\n                        taskData={task}\n                        userGoalId={this.props.goalData.userGoalId}\n                        handleCompleteTask={this.props.handleCompleteTask}\n                        handleIncompleteTask={this.props.handleIncompleteTask}\n                    />\n                ))}\n            </tbody>\n        );\n    }\n}\n\nclass VizTask extends React.Component {\n    render() {\n        return(\n                    <tr \n                        key={this.props.key}\n                        className={this.props.taskData.taskCompleteYN ? 'task-goal-met' : 'task-goal-unmet'}                        \n                    >\n                        <td className=\"taskName\">\n                            {this.props.taskData.taskCompleteYN ? <i class=\"fa fa-check\" aria-hidden=\"true\">&nbsp;</i> : <span>&nbsp;</span>}\n                            {this.props.taskData.taskName}\n                        </td>\n                        <td>&nbsp;</td>\n                        {this.props.taskData.userTimeline.map( date => (\n                            <VizDate\n                                key={date.timelineDate + '_' + this.props.taskData.taskId}\n                                id={date.timelineDate + '_' + this.props.taskData.taskId}\n                                taskId={this.props.taskData.taskId}\n                                userGoalId={this.props.userGoalId}\n                                dateData={date}\n                                handleCompleteTask={this.props.handleCompleteTask}\n                                handleIncompleteTask={this.props.handleIncompleteTask}\n                            />\n                        ))}\n                        <td>&nbsp;</td>\n                        {/* <td>{this.props.taskData.taskCurrentStreak}</td>  */}\n                        <td>{this.props.currentStreak}</td>                   \n                        <td>{this.props.taskData.taskLongStreak}/{this.props.taskData.taskStreakTarget}</td>\n                        <td>{this.props.taskData.taskTotalCompleted}/{this.props.taskData.taskTotalTarget}</td>\n                    </tr>\n        );\n    }\n}\n\nclass VizDate extends React.Component {\n    render() {\n        return(\n            <td className='date-item'>\n                {/* {this.props.dateData.timelineDate}\n                <br></br> */}\n                {this.props.dateData.taskCompletedYN ? (\n                    <div \n                        className='task-complete'\n                        onClick={() => this.props.handleIncompleteTask(this.props.dateData.timelineId)}\n                    >\n                        &nbsp;\n                    </div>\n                ): (\n                    <div \n                        className='task-incomplete'\n                        onClick={() => this.props.handleCompleteTask(this.props.taskId, this.props.userGoalId, this.props.dateData.timelineDate)}\n                    >\n                        &nbsp;\n                    </div>\n                )}\n            </td>\n        )\n    }\n}\n\nexport default Visualizer;","import React from 'react';\nimport \"./style.css\";\n\n// // import React components\nimport Container from '../../components/Container';\nimport Visualizer from '../../components/Visualizer';\n\nclass Progress extends React.Component {\n    componentDidMount = () => {\n\n    }\n\n    render() {\n        return (\n            <div className='visualizerDiv'>\n                {/* <Container> */}\n                    <h1 className=\"visualizerH1\">Visualize Your Progress</h1>\n                    <h2 className=\"visualizerH2\">Mark your progress on the dates you've completed the task.</h2>\n                    <Visualizer\n                        visualizerData={this.props.visualizerData}\n                        visualizerDates={this.props.visualizerDates}\n                        changeVisualizerDates={this.props.changeVisualizerDates}\n                        handleCompleteTask={this.props.handleCompleteTask}\n                        handleIncompleteTask={this.props.handleIncompleteTask}\n                    />\n                {/* </Container> */}\n            </div>\n        );\n    }\n}\n\nexport default Progress;","import React from 'react';\nimport './style.css';\n\n\nclass CategoryForm extends React.Component {\n\n    render() {\n        return (\n            <form>\n                <div className='form-group'>\n                    <label htmlFor='categoryName'>Category Name</label>\n                    <input \n                        type='text' \n                        className='form-control' \n                        placeholder='Category Name'\n                        value={this.props.categoryName}\n                        name='categoryName'\n                        id='categoryName' \n                        onChange={this.props.handleOnChange}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='categoryTagLine'>Category Tag Line</label>\n                    <input \n                        type='text' \n                        className='form-control' \n                        placeholder='Category Tag Line'\n                        value={this.props.categoryTagLine}\n                        name='categoryTagLine'\n                        id='categoryTagLine' \n                        onChange={this.props.handleOnChange}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='categoryImgSrc'>Category Image Source</label>\n                    <input \n                        type='text' \n                        className='form-control' \n                        placeholder='Category Image Source'\n                        value={this.props.categoryImgSrc}\n                        name='categoryImgSrc'\n                        id='categoryImgSrc' \n                        onChange={this.props.handleOnChange}\n                    />\n                </div>\n                <button \n                    type='submit' \n                    className='btn btn-style'\n                    onClick={this.props.handleCategoryFormSubmit}\n                >Add Category!\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default CategoryForm;","import React from 'react';\nimport './style.css';\n\nclass GoalForm extends React.Component {\n\n    render() {\n        return (\n            <form>\n                <div className='form-group'>\n                    <label htmlFor='categoryId'>Select Category</label>\n                    <select className='form-control' id='categoryId' name='categoryId' onChange={this.props.handleOnChange} value={this.props.categoryId}>\n                        <option hidden selected>-- Select a Category --</option>\n                    {this.props.categories.map( category => (\n                        <option key={category._id} value={category._id}>\n                            {category.categoryName} |  {category.categoryTagLine}\n                        </option>\n                    ))}\n                    </select>\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='goalName'>Goal Name</label>\n                    <input \n                        type='text' \n                        className='form-control' \n                        placeholder='Goal Name'\n                        value={this.props.goalName}\n                        name='goalName'\n                        id='goalName' \n                        onChange={this.props.handleOnChange}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='goalTagline'>Goal Tagline</label>\n                    <input \n                        type='text' \n                        className='form-control' \n                        placeholder='Goal Tagline'\n                        value={this.props.goalTagline}\n                        name='goalTagline'\n                        id='goalTagline' \n                        onChange={this.props.handleOnChange}\n                    />\n                </div>\n                <button \n                    type='submit' \n                    className='btn btn-style'\n                    onClick={this.props.handleGoalFormSubmit}\n                >Add Goal!\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default GoalForm;","import React from 'react';\nimport './style.css';\n\nclass Task extends React.Component {\n    render() {\n        return (\n            <form>\n                <div className='form-group'>\n                    <label htmlFor='goalId'>Select Goal</label>\n                    <select className='form-control' id='goalId' name='goalId' onChange={this.props.handleOnChange} value={this.props.goalId}>\n                        <option hidden selected>-- Select a Goal --</option>\n                    {this.props.goals.map( goal => (\n                        <option key={goal._id} value={goal._id}>\n                            {goal.goalName}\n                        </option>\n                    ))}\n                    </select>\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            <td className=\"taskListTd\">\n                                Task Name\n                            </td>\n                            <td className=\"taskListTd streakTarget\">\n                                Streak Target (# times consecutively)\n                            </td>\n                            <td className=\"taskListTd totalTarget\">\n                                Total Target (# times in total)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td className='taskName'>\n                                <div className='form-group'>\n                                    <input \n                                        type='text' \n                                        className='form-control' \n                                        placeholder='Task Name'\n                                        value={this.props.taskName}\n                                        name='taskName'\n                                        id='taskName' \n                                        onChange={this.props.handleOnChange}\n                                    />\n                                </div>\n                            </td>\n                            <td className='streakTarget'>\n                                <div className='form-group'>\n                                <input \n                                        type='number' \n                                        className='form-control' \n                                        placeholder='# Consecutive'\n                                        value={this.props.streakTarget}\n                                        name='streakTarget'\n                                        id='streakTarget' \n                                        onChange={this.props.handleOnChange}\n                                    />\n                                </div>\n                            </td>\n                            <td className='totalTarget'>\n                                <div className='form-group'>\n                                    <input \n                                        type='number' \n                                        className='form-control' \n                                        placeholder='# Total'\n                                        value={this.props.totalTarget}\n                                        name='totalTarget'\n                                        id='totalTarget' \n                                        onChange={this.props.handleOnChange}\n                                    />\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan='3'>\n                                <button \n                                    type='submit' \n                                    className='btn btn-style'\n                                    onClick={this.props.handleTaskFormSubmit}\n                                >Add Task!\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </form>\n        );\n    }\n}\n\nexport default Task;","import React from 'react';\n\n\n// import React components\nimport Container from '../../components/Container';\n\nimport Card from '../../components/Card';\nimport CategoryForm from '../../components/CategoryForm';\nimport GoalForm from '../../components/GoalForm';\nimport TaskForm from '../../components/TaskForm';\nimport TaskList from '../../components/TaskList';\n\n\nclass Admin extends React.Component {\n    render() {\n        return (\n            <div>\n                <Container>\n                    <h1>Administration</h1>\n                    <Card heading='Add A Category'>\n                        <CategoryForm \n                            categoryName={this.props.categoryName}\n                            categoryTagLine={this.props.categoryTagLine}\n                            categoryImgSrc={this.props.categoryImgSrc}\n                            handleOnChange={this.props.handleOnChange}\n                            handleCategoryFormSubmit={this.props.handleCategoryFormSubmit}\n                        />\n                    </Card>\n                    <hr />\n                    <Card heading='Add A Goal'>\n                        <GoalForm \n                            categoryId={this.props.categoryId}\n                            goalName={this.props.goalName}\n                            categories={this.props.categories}\n                            handleOnChange={this.props.handleOnChange}\n                            handleGoalFormSubmit={this.props.handleGoalFormSubmit}\n                        />\n                    </Card>\n                    <hr />\n                    <Card heading='Add a TaskList Item'>\n                        <TaskForm\n                            goalId={this.props.goalId}\n                            goals={this.props.goals}\n                            taskName={this.props.taskName}\n                            weeklyTarget={this.props.weeklyTarget}\n                            totalTarget={this.props.totalTarget}\n                            handleOnChange={this.props.handleOnChange}\n                            handleTaskFormSubmit={this.props.handleTaskFormSubmit}\n                        />\n                        <TaskList\n                            tasks={this.props.tasks}\n                        />\n                    </Card>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Admin;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// import components that appear on every page\nimport Navbar from \"./components/Navbar\";\nimport LoginForm from \"./components/LoginForm\";\n\n// import top level pages that get displayed from routes\nimport Error404 from \"./pages/Error404\";\nimport Register from \"./pages/Register\";\nimport Home from \"./pages/Home\";\nimport Manage from \"./pages/Manage\";\nimport AddGoal from \"./pages/AddGoal\";\nimport Progress from \"./pages/Progress\";\n// import Test from './pages/Test';\nimport Admin from \"./pages/Admin\";\n\n// import client API\nimport API from \"./utils/API\";\n\n// moment js\nconst moment = require('moment');\n\nclass App extends React.Component {\n\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        categoryName: '',\n        categoryTagLine: '',\n        categoryImgSrc: '',\n        categories: [],\n        selectedCategory: {},\n        categoryId: '',\n        goalName: '',\n        goalTagline: '',\n        goalId: '',\n        goals: [],\n        selectedGoal: {},\n        taskName: '',\n        tasks: [],\n        userDetails: {},\n        streakTarget: '7',\n        totalTarget: '7',\n        isAuthenticated: false,\n        showLogin: false,\n        failedLoginAttempts: 0,\n        showTaskOverlay: false,\n        showOkDialog: false,\n        loginMessage: 'Log in or register to enhance your experience!',\n        visualizerDates: [],\n        visualizerData: [],\n        numVisualizerDays: 7,\n        userGoals: []\n    }\n\n    componentDidMount = () => {\n        this.resetState();\n        let userId = localStorage.getItem('userKey');\n        if (userId) {\n            // console.log('user key is ' + userId );\n            this.getUserDetails(userId);\n        }\n    }\n\n    resetState = () => {\n        // re-set state to beginning state\n        this.setState({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            categoryName: '',\n            categoryTagLine: '',\n            categoryImgSrc: '',\n            categories: [],\n            selectedCategory: {},\n            categoryId: '',\n            goalName: '',\n            goalTagline: '',\n            goalId: '',\n            goals: [],\n            selectedGoal: {},\n            taskName: '',\n            tasks: [],\n            userDetails: {},\n            streakTarget: '7',\n            totalTarget: '7',\n            isAuthenticated: false,\n            showLogin: false,\n            failedLoginAttempts: 0,\n            showTaskOverlay: false,\n            numVisualizerDays: 7,\n            visualizerDates: [],\n            visualizerData: [],\n            userGoals: []\n            });        \n            // get initial categories\n            this.getCategories();\n            // set initial visualizer date range\n            let now = moment().startOf('day').format('M/D/YYYY');\n            let startDate = moment(now).subtract(this.state.numVisualizerDays - 1 ,'days');\n            this.resetVisualizerDates(startDate,this.state.numVisualizerDays);\n    }\n\n    resetVisualizerDates = (startDate, numDays) => {\n        let dateArray = [];\n        for (let i = 0; i < numDays; i++) {\n            let thisDate = moment(startDate).add(i, 'days').format('M/D/YYYY').toString();\n            dateArray.push(thisDate);\n        }\n        this.setState({\n            visualizerDates: dateArray\n        });\n    }\n\n    changeVisualizerDates = (numdays) => {\n        let startDate = moment(this.state.visualizerDates[0]).add(numdays,'days')\n        let now = moment().startOf('day').format('M/D/YYYY');\n        if (\n            moment(now).subtract(this.state.numVisualizerDays - 1 ,'days') < moment(this.state.visualizerDates[0]).add(numdays,'days')\n            ) {\n                startDate = moment(now).subtract(this.state.numVisualizerDays - 1 ,'days')\n            }\n        this.resetVisualizerDates(startDate,this.state.numVisualizerDays);\n        this.getUserDetails(localStorage.getItem('userKey'));\n    }\n\n    handleOnChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n        // when categoryId changes,\n        // load the goals for that category\n        // and populate the selectedCategory\n        if (event.target.name === \"categoryId\") {\n            this.getGoalsInCategory(event.target.value);\n            this.getCategoryMatch(event.target.value);\n            }\n        // when goalId changes, load the tasks for that goal\n        if (event.target.name === \"goalId\") {\n            this.getTasksInGoal(event.target.value);\n        }\n    };\n\n    handleCompleteTask = (taskId, userGoalId, date) => {\n        // console.log(`completed taskId: ${taskId}; userGoalId: ${userGoalId}; date: ${date}`);\n        let timelineData = {\n            taskId: taskId,\n            userGoalId: userGoalId,\n            taskDate: date,\n            taskCompletedYN: true\n        }\n        API.addTimeline(timelineData)\n            .then(jsonData => {\n                this.getUserDetails(localStorage.getItem('userKey'));\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n    handleIncompleteTask = (timelineId) => {\n        // console.log(`remove timelineId: ${timelineId}`);\n        API.deleteTimeline(timelineId)\n            .then(jsonData => {\n                this.getUserDetails(localStorage.getItem('userKey'));\n            })\n            .catch(error => {\n                console.log(error);\n            })        \n    }\n\n    handleLoginFormSubmit = event => {\n    event.preventDefault();\n    // console.log(\"login submit clicked\");\n    let loginData = {\n        email: this.state.email,\n        password: this.state.password\n    };\n    // console.log(loginData);\n    API.authenticateUser(loginData)\n        .then(jsonData => {\n            let userData = jsonData.data;\n            // console.log(userData);\n            if (userData.length === 0) {\n                console.log(\"login failed\");\n                let failedCount = this.state.failedLoginAttempts + 1;\n                this.setState({\n                    failedLoginAttempts: failedCount,\n                    email: \"\",\n                    password: \"\",\n                    isAuthenticated: false\n                });\n            } else if (userData.length === 1) {\n                // console.log(\"login successful\");\n                this.setState({\n                    loginMessage: \"\",\n                    firstName: userData[0].firstName,\n                    lastName: userData[0].lastName,\n                    email: userData[0].email\n                });\n                this.setUserSession(userData[0]._id);\n                this.getUserDetails(userData[0]._id);\n                this.setupUserGoals(this.state.userGoals)\n            } else {\n              console.log(\"WTF??!  How did you get more than 1??\");\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    };\n\n    handleCategoryFormSubmit = event => {\n        event.preventDefault();\n        // console.log(\"submit category clicked\");\n        let categoryData = {\n            categoryName: this.state.categoryName,\n            categoryTagLine: this.state.categoryTagLine,\n            categoryImgSrc: this.state.categoryImgSrc\n            };\n        // console.log(categoryData);\n        API.addCategory(categoryData)\n            .then(jsonData => {\n                this.getCategories();\n                // console.log(jsonData);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    handleTaskFormSubmit = event => {\n        event.preventDefault();\n        // console.log('submit task clicked');\n        let taskData = {\n            goalId: this.state.goalId,\n            taskName: this.state.taskName,\n            streakTarget: parseInt(this.state.streakTarget),\n            totalTarget: parseInt(this.state.totalTarget)\n        }\n        // console.log(taskData);\n        API.addTask(taskData)\n            .then(jsonData => {\n                // console.log(jsonData);\n                this.getTasksInGoal(this.state.goalId);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    handleAddGoalFormSubmit = event => {\n        event.preventDefault();\n        // console.log('Add User Goal');\n        let userId = localStorage.getItem('userKey');\n        if (userId) {\n            // user is logged in\n            let goalId = this.state.selectedGoal._id;\n            let userGoalData = {\n                userId: userId,\n                goalId: goalId\n            }\n            API.addUserGoal(userGoalData)\n                .then(jsonData => {\n                    // console.log(jsonData);\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n            this.setState({\n                showTaskOverlay: false,\n                showOkDialog: true\n            });    \n        } else {\n            // user is NOT logged in\n            // user must REGISTER or LOGIN\n            this.setState({\n                showLogin: true\n            })\n        }\n    }\n\n    handleGoalFormSubmit = event => {\n        event.preventDefault();\n        // console.log(\"submit goal clicked\");\n        let goalData = {\n            categoryId: this.state.categoryId,\n            goalName: this.state.goalName,\n            goalTagline: this.state.goalTagline,\n        };\n        // console.log(goalData);\n        API.addGoal(goalData)\n            .then(jsonData => {\n                // console.log(jsonData);\n                this.getGoalsInCategory(this.state.categoryId);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    getCategories = () => {\n        // console.log('loading category options');\n        API.getCategories()\n            .then(jsonData => {\n                // console.log(jsonData)\n                this.setState({\n                    categories: jsonData.data\n                })\n            });\n    }\n\n    getCategoryMatch = categoryId => {\n        // console.log(\"loading selected category with id \" + categoryId);\n        API.getCategoryMatch(categoryId).then(jsonData => {\n            // console.log(jsonData);\n            this.setState({\n                selectedCategory: jsonData.data[0],\n                categoryId: categoryId\n            });\n        });\n    };\n\n    getGoalsInCategory = categoryId => {\n        // console.log(\"loading goals for category \" + categoryId);\n        API.getGoalsInCategory(categoryId).then(jsonData => {\n            // console.log(jsonData);\n            this.setState({\n                goals: jsonData.data\n            });\n        });\n    };\n\n    getGoalMatch = goalId => {\n        // console.log(\"loading selected goal with id \" + goalId);\n        API.getGoalMatch(goalId).then(jsonData => {\n            // console.log(jsonData);\n            this.setState({\n                selectedGoal: jsonData.data[0]\n            });\n        });\n    };\n\n    getTasksInGoal = goalId => {\n        // console.log(\"loading tasks for goal \" + goalId);\n        API.getTasksInGoal(goalId).then(jsonData => {\n            // console.log(jsonData);\n            this.setState({\n                tasks: jsonData.data\n            });\n        });\n    };\n\n    getUserDetails = (userId) => {\n        // console.log('loading user details')\n        API.getUserDetails(userId)\n            .then( jsonData => {\n                // console.log(jsonData);\n                let userData = jsonData.data;\n                // update state with user data\n                this.setState({\n                    loginMessage: \"\",\n                    userId: userId,\n                    firstName: userData.firstName,\n                    lastName: userData.lastName,\n                    email: userData.email,\n                    isAuthenticated: true,\n                    userDetails: userData,\n                    userGoals: userData.userGoals,\n                });\n                this.setupUserGoals(userData);\n            })\n    }\n\n    setupUserGoals = (userData) => {\n        // this appears to be needed becuase React sees the array nodes in the API results as Object rather than an array of Objects   \n        let visualizerData = [];\n        let dbUserGoals = userData.userGoals;\n        for (let g = 0; g < dbUserGoals.length; g ++) {\n            let userGoalId = dbUserGoals[g]._id;\n            let goalId = dbUserGoals[g].goalId._id;\n            let goalName = dbUserGoals[g].goalId.goalName;\n            let goalPercent = dbUserGoals[g].goalPercent;\n            let userTasks = [];\n            let dbUserTasks = dbUserGoals[g].goalId.tasks;\n            for (let t = 0; t < dbUserTasks.length; t++) {\n                let userTimeline = []\n                let dbUserTimeline = userData.userGoals[g].taskTimelines;\n                // console.log('usertimeline:', dbUserTimeline);\n                for (let l = 0; l < this.state.visualizerDates.length; l++) {\n                    // is the first date in the array of timeline\n                    let currentDate = this.state.visualizerDates[l];\n                    let taskCompleted = false;\n                    let timelineId = 'null';\n                    for (let ul = 0; ul < dbUserTimeline.length; ul++) {\n                        if (\n                                moment.utc(dbUserTimeline[ul].taskDate).format('M/D/YYYY') === moment.utc(currentDate).format('M/D/YYYY') &&\n                                dbUserTimeline[ul].taskId === dbUserTasks[t]._id\n                            ) {\n                            taskCompleted = dbUserTimeline[ul].taskCompletedYN;\n                            timelineId = dbUserTimeline[ul]._id\n                        }\n                    }\n                    let timelineEntry = {\n                        timelineId: timelineId,\n                        timelineDate: moment(currentDate).format('M/D/YYYY'),\n                        taskCompletedYN: taskCompleted\n                    }\n                    userTimeline.push(timelineEntry);\n                }\n                let thisTask = {\n                    'taskId': dbUserTasks[t]._id,\n                    'taskName': dbUserTasks[t].taskName,\n                    'taskStreakTarget': dbUserTasks[t].streakTarget,\n                    'taskTotalTarget': dbUserTasks[t].totalTarget,\n                    'taskCurrentStreak': 0,  // tracks towards task completion\n                    'taskLongStreak': 0, // tracks toward task completeion\n                    'taskTotalCompleted': 0, // tracks toward task completion\n                    'taskCompleteYN': false, // is task completed (met streak or total target)\n                    'userTimeline': userTimeline\n                }\n                // add thisTask to userTask array\n                userTasks.push(thisTask);\n            }\n            let thisGoal = {\n                'userGoalId': userGoalId,\n                'goalId': goalId,\n                'goalName': goalName,\n                'goalPercent': goalPercent,\n                'userTasks': userTasks\n            }\n            visualizerData.push(thisGoal);\n        }\n        // console.log(visualizerData);\n\n        this.calculateProgress(visualizerData);\n    }\n\n    calculateProgress = async (visualizerData) => {\n        // loop through goals\n        for (let g = 0; g < visualizerData.length; g++) {\n            //goal loop\n            // console.log('working on user goal' + visualizerData[g].goalName + ' ' + visualizerData[g].userGoalId);\n            // determine how many tasks and number completed to track goal progress\n            let numTasks = 0\n            let numCompletedTasks = 0;\n            let goalPercent = 0;            \n\n            for (let t = 0; t < visualizerData[g].userTasks.length; t++) {\n                // task loop within goal\n                numTasks++\n                // console.log('working on task' + visualizerData[g].userTasks[t].taskName + ' ' + visualizerData[g].userTasks[t].taskId);\n\n                let userGoalId = visualizerData[g].userGoalId;\n                let taskId = visualizerData[g].userTasks[t].taskId\n                let taskCompleteYN = false; // for tracking if task has been completed by either long streak OR total number of completions\n                let taskStreakTarget = visualizerData[g].userTasks[t].taskStreakTarget;\n                let taskTotalTarget = visualizerData[g].userTasks[t].taskTotalTarget;\n                // get timeline entries for task\n                await API.getTaskTimeline(taskId, userGoalId)\n                    .then( dbTaskTimeline => {\n                        // cycle through timeline for \n                        let currentStreak = 0;\n                        let longestStreak = 0;\n                        let totalCompleted = 0;\n                        let dbrecord = dbTaskTimeline.data;\n                        if (dbrecord.length > 0) {\n                            // console.log(dbrecord);\n                            // set earliest date and now\n                            let taskStartDate = moment(dbrecord[0].taskDate);\n                            let taskEndDate = moment().startOf('day');\n                            let numDays = taskEndDate.diff(taskStartDate, 'days') + 1;\n                            let dateIndex = 0; // index for going through dbUserTimeline array\n                            // cycle through all day to current date\n                            let dateIndexMax = dbrecord.length - 1; // used to prevent increasing index past last item\n                            // console.log(taskStartDate.format('M/D/YYYY'),'thru', taskEndDate.format('M/D/YYYY'))\n                            for (let d = 0; d < numDays; d++) {\n                                // test if the date d from start date (ddate) is the same as the current index of the timeline (idate)\n                                let ddate = moment(taskStartDate).add(d,'days').format('M/D/YYYY').toString();\n                                let idate = moment(dbrecord[dateIndex].taskDate).format('M/D/YYYY').toString();\n                                // console.log(ddate, idate);\n                                if ( \n                                    ddate === idate\n                                    ) {\n                                        // console.log(ddate,idate,dateIndex, dbrecord[dateIndex].taskCompletedYN)\n                                        if (dbrecord[dateIndex].taskCompletedYN) {\n                                            // if the task is completed on this date\n                                            currentStreak++;  // increment current streak\n                                            if (currentStreak > longestStreak) {longestStreak = currentStreak} // if the current is > longest, reset longest\n                                            totalCompleted++; // increment total completed\n                                        } else {\n                                            // this should not be reached (since incompelte dates are going to be missing)... but in case something changes...\n                                            currentStreak = 0; // reset the current streak\n                                        }\n                                        // increase the dateIndex\n                                        if (dateIndex < dateIndexMax) {dateIndex ++};\n                                    } else {\n                                        currentStreak = 0;\n                                    }\n                            }\n                        }\n                        // console.log(taskId, currentStreak, longestStreak, totalCompleted);\n                        // did the task get completed?\n                        if (longestStreak >= taskStreakTarget || totalCompleted >= taskTotalTarget) {\n                            // mark task as complete\n                            taskCompleteYN = true;\n                            // increase number of completed tasks for the goal\n                            numCompletedTasks++\n                        }\n                        // set the task progress\n                        // console.log(visualizerData[g].userTasks[t])\n                        visualizerData[g].userTasks[t].taskCurrentStreak = currentStreak;  // tracks towards task completion\n                        visualizerData[g].userTasks[t].taskLongStreak = longestStreak; // tracks toward task completeion\n                        visualizerData[g].userTasks[t].taskTotalCompleted = totalCompleted;// tracks toward task completion    \n                        visualizerData[g].userTasks[t].taskCompleteYN = taskCompleteYN;\n                    })\n            }\n            // calculate the goal progress\n            if (numTasks === 0) {\n                goalPercent = 100;\n            } else {\n                goalPercent = Math.floor(100 * numCompletedTasks/numTasks);\n            }\n            // add the goal Percent\n            // console.log(visualizerData[g].goalName, numCompletedTasks, numTasks, goalPercent);\n            visualizerData[g].goalPercent = goalPercent;\n            // update database with goalpercent\n            await API.updateGoalPercent(visualizerData[g].userGoalId, goalPercent)\n                .then( dbUserGoal => {\n                    // console.log(dbUserGoal)\n                    let returnData = dbUserGoal.data;\n                })\n                .catch( dbError => console.log(dbError) )\n        }\n        this.setState({\n            visualizerData: visualizerData\n        });\n\n        // console.log(visualizerData);\n    }\n\n    logoutClick = () => {\n        // console.log('logging out...');\n        localStorage.setItem('userKey', '');\n        this.resetState();\n    }\n\n    loginClose = () => {\n        this.setState({\n            showLogin: false\n        });\n    }\n\n    loginClick = () => {\n        // console.log(\"logging in...\");\n        this.setState({\n          showLogin: true\n        });\n    };\n\n    markUserGoalComplete = () => {\n        // console.log('user completed their goal');\n    };\n\n    taskOverlayClose = () => {\n        this.setState({\n            showTaskOverlay: false\n        })\n    }\n\n    setUserSession = key => {\n        localStorage.setItem(\"userKey\", key);\n        this.setState({\n            isAuthenticated: true,\n            showLogin: false\n        });\n    };\n\n    selectGoal = (goalId) => {\n        // console.log('clicked a goal card ' + goalId);\n        // populate selectedGoal\n        this.getGoalMatch(goalId);\n        // get tasks for the selectedGoal\n        this.getTasksInGoal(goalId);\n        // show TaskOverlay\n        this.setState({\n            showTaskOverlay: true\n        });\n    }\n\n    clearCategory = () => {\n        this.setState({\n            categoryId: '',\n            selectedCategory: {},\n            goals: [],\n        })\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Navbar \n                        isAuthenticated={this.state.isAuthenticated}\n                        handleLogout={this.logoutClick}\n                        handleLogin={this.loginClick}\n                        firstName={this.state.firstName}\n                    />\n                    <LoginForm\n                        email={this.state.email}\n                        password={this.state.password} \n                        showLogin={this.state.showLogin}\n                        failedLoginAttempts={this.state.failedLoginAttempts}\n                        handleOnChange={this.handleOnChange}\n                        handleLoginFormSubmit={this.handleLoginFormSubmit}\n                        handleLoginClose={this.loginClose}\n                        message={this.state.loginMessage}\n                        />\n                    <Switch>\n                        <Route exact path='/' render={\n                            (props) => <Home {...props} \n                            categories={this.state.categories}\n                            getCategoryMatch={this.getCategoryMatch}\n                            />}\n                        />\n                        <Route exact path='/register' render={(props) => <Register {...props}\n                            firstName={this.state.firstName}\n                            lastName={this.state.lastName}\n                            email={this.state.email}\n                            password={this.state.password}\n                            handleOnChange={this.handleOnChange}\n                            setUserSession={this.setUserSession}\n                            loginClose={this.loginClose}\n                            />}\n                        />\n\n                        <Route exact path='/addgoal' render={ (props) => <AddGoal {...props}\n                                categoryId={this.state.categoryId}\n                                selectedCategory={this.state.selectedCategory}\n                                handleOnChange={this.handleOnChange}\n                                getCategories={this.getCategories}\n                                categories={this.state.categories} \n                                goals={this.state.goals}    \n                                selectGoal={this.selectGoal}    \n                                showTaskOverlay={this.state.showTaskOverlay}   \n                                selectedGoal={this.state.selectedGoal}\n                                tasks={this.state.tasks}\n                                getCategoryMatch={this.getCategoryMatch}\n                                getGoalsInCategory={this.getGoalsInCategory}\n                                taskOverlayClose={this.taskOverlayClose}\n                                handleAddGoalFormSubmit={this.handleAddGoalFormSubmit}\n                                showOkDialog={this.state.showOkDialog}\n                                clearCategory={this.clearCategory}\n                            />}\n                        />\n                        <Route exact path=\"/manage\" render={ (props) => <Manage {...props}\n                                handleOnChange={this.handleOnChange}\n                                // userGoals={this.state.userGoals}\n                                userGoals={this.state.visualizerData}\n                                getUserDetails={this.getUserDetails}\n                                selectGoal={this.selectGoal}    \n                                showTaskOverlay={this.state.showTaskOverlay}   \n                                selectedGoal={this.state.selectedGoal}\n                                tasks={this.state.tasks}\n                            />}\n                        />\n\n                        <Route exact path='/progress' render={ (props) => <Progress {...props} \n                                visualizerDates={this.state.visualizerDates}\n                                visualizerData={this.state.visualizerData}\n                                changeVisualizerDates={this.changeVisualizerDates}\n                                handleCompleteTask={this.handleCompleteTask}\n                                handleIncompleteTask={this.handleIncompleteTask}\n                            />}\n                        />\n\n                        <Route exact path='/admin' render={(props) => <Admin {...props}\n                            categoryId={this.state.categoryId}\n                            categoryName={this.state.categoryName}\n                            categoryTagLine={this.state.categoryTagLine}\n                            categoryImgSrc={this.state.categoryImgSrc}\n                            categories={this.state.categories}\n                            getCategories={this.getCategories}\n                            goalId={this.state.goalId}\n                            goals={this.state.goals}\n                            getGoalsInCategory={this.getGoalsInCategory}\n                            handleOnChange={this.handleOnChange}\n                            handleCategoryFormSubmit={this.handleCategoryFormSubmit}\n                            handleGoalFormSubmit={this.handleGoalFormSubmit}\n                            taskName={this.state.taskName}\n                            tasks={this.state.tasks}\n                            streakTarget={this.state.streakTarget}\n                            totalTarget={this.state.totalTarget}\n                            handleTaskFormSubmit={this.handleTaskFormSubmit}\n                            />}\n                        />\n                        <Route component={Error404} />\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}